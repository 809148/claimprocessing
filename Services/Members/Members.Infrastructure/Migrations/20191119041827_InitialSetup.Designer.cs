// <auto-generated />
using CTOCDE.HC.ClaimsProcessing.Services.Members.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CTOCDE.HC.ClaimsProcessing.Services.Members.Infrastructure.Migrations
{
    [DbContext(typeof(MemberDataContext))]
    [Migration("20191119041827_InitialSetup")]
    partial class InitialSetup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CTOCDE.HC.ClaimsProcessing.Services.Members.Domain.Aggregates.MemberAggregate.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(100);

                    b.Property<string>("AddressLine3")
                        .HasMaxLength(100);

                    b.Property<string>("AddressType")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("MemberId");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(6);

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("CTOCDE.HC.ClaimsProcessing.Services.Members.Domain.Aggregates.MemberAggregate.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactType")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<int>("MemberId");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("CTOCDE.HC.ClaimsProcessing.Services.Members.Domain.Aggregates.MemberAggregate.Enrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CoverageEndDate")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("CoverageStartDate")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("CoverageType")
                        .IsRequired();

                    b.Property<string>("CoverageTypeCode")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("MemberId");

                    b.Property<int>("PlanId");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("CTOCDE.HC.ClaimsProcessing.Services.Members.Domain.Aggregates.MemberAggregate.Member", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DateOfBirth")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("MaritalStatus")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("MemberIdentifier")
                        .HasMaxLength(10);

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100);

                    b.Property<int>("PlanId");

                    b.Property<string>("Prefix")
                        .HasMaxLength(10);

                    b.Property<string>("SubscriberId")
                        .HasMaxLength(10);

                    b.Property<string>("Suffix")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("members");
                });

            modelBuilder.Entity("CTOCDE.HC.ClaimsProcessing.Services.Members.Domain.Aggregates.MemberAggregate.Address", b =>
                {
                    b.HasOne("CTOCDE.HC.ClaimsProcessing.Services.Members.Domain.Aggregates.MemberAggregate.Member", "Member")
                        .WithMany("Addresses")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CTOCDE.HC.ClaimsProcessing.Services.Members.Domain.Aggregates.MemberAggregate.Contact", b =>
                {
                    b.HasOne("CTOCDE.HC.ClaimsProcessing.Services.Members.Domain.Aggregates.MemberAggregate.Member", "Member")
                        .WithMany("Contacts")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CTOCDE.HC.ClaimsProcessing.Services.Members.Domain.Aggregates.MemberAggregate.Enrollment", b =>
                {
                    b.HasOne("CTOCDE.HC.ClaimsProcessing.Services.Members.Domain.Aggregates.MemberAggregate.Member", "Member")
                        .WithMany("Enrollments")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
