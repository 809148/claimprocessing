// <auto-generated />
using System;
using CTOCDE.HC.ClaimsProcessing.Services.Benefits.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CTOCDE.HC.ClaimsProcessing.Services.Benefits.Infrastructure.Migrations
{
    [DbContext(typeof(BenefitDataContext))]
    [Migration("20191119050634_IntialSetup")]
    partial class IntialSetup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CTOCDE.HC.ClaimsProcessing.Services.Benefits.Domain.Aggregates.BenefitAggregate.Benefit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CoverageTypeId");

                    b.Property<string>("DateOfService");

                    b.Property<string>("EligStatus");

                    b.Property<string>("MemberId");

                    b.Property<int>("PlanId");

                    b.Property<string>("SubscriberId");

                    b.HasKey("Id");

                    b.HasIndex("CoverageTypeId");

                    b.HasIndex("PlanId");

                    b.ToTable("Benefits","schedules");
                });

            modelBuilder.Entity("CTOCDE.HC.ClaimsProcessing.Services.Benefits.Domain.Aggregates.BenefitAggregate.CoverageType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("CoverageType");
                });

            modelBuilder.Entity("CTOCDE.HC.ClaimsProcessing.Services.Benefits.Domain.Aggregates.BenefitAggregate.Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CoPayPercent");

                    b.Property<string>("CoverageType");

                    b.Property<int?>("CoverageTypeId");

                    b.Property<decimal>("DeductiblePercent");

                    b.Property<string>("EffectiveEndDate");

                    b.Property<string>("EffectiveStartDate");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CoverageTypeId");

                    b.ToTable("Plan");
                });

            modelBuilder.Entity("CTOCDE.HC.ClaimsProcessing.Services.Benefits.Domain.Aggregates.BenefitAggregate.PlanDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PlanId");

                    b.Property<string>("ServiceCode");

                    b.Property<string>("ServiceName");

                    b.HasKey("Id");

                    b.HasIndex("PlanId");

                    b.ToTable("PlanDetail");
                });

            modelBuilder.Entity("CTOCDE.HC.ClaimsProcessing.Services.Benefits.Domain.Aggregates.BenefitAggregate.Benefit", b =>
                {
                    b.HasOne("CTOCDE.HC.ClaimsProcessing.Services.Benefits.Domain.Aggregates.BenefitAggregate.CoverageType", "CoverageType")
                        .WithMany()
                        .HasForeignKey("CoverageTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CTOCDE.HC.ClaimsProcessing.Services.Benefits.Domain.Aggregates.BenefitAggregate.Plan", "Plan")
                        .WithMany()
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CTOCDE.HC.ClaimsProcessing.Services.Benefits.Domain.Aggregates.BenefitAggregate.Plan", b =>
                {
                    b.HasOne("CTOCDE.HC.ClaimsProcessing.Services.Benefits.Domain.Aggregates.BenefitAggregate.CoverageType")
                        .WithMany("Plans")
                        .HasForeignKey("CoverageTypeId");
                });

            modelBuilder.Entity("CTOCDE.HC.ClaimsProcessing.Services.Benefits.Domain.Aggregates.BenefitAggregate.PlanDetail", b =>
                {
                    b.HasOne("CTOCDE.HC.ClaimsProcessing.Services.Benefits.Domain.Aggregates.BenefitAggregate.Plan", "Plan")
                        .WithMany("PlanDetails")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
